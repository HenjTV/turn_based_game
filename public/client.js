function U(z={}){return{playerName:"",lobbyId:"",currentTurn:"",isMyTurn:!1,selectedCharacter:null,statsConfig:null,currentResource:100,maxResource:100,resourceType:"Rage",breakroundleftheal:0,breakroundleftdefence:0,hp:100,maxHp:100,powerBar:0,...z}}async function X(z){try{let W=await fetch("/api/characters");if(!W.ok)throw new Error(`Failed to load character options: ${W.statusText}`);let $=await W.json(),L=z.selectors.characterSelect;L.innerHTML="",$.characters.forEach((j)=>{let q=document.createElement("div");q.className="character-option",q.dataset.character=j;let J=document.createElement("img");J.src=`/images/characters/${j}`,J.alt=j,q.appendChild(J),q.addEventListener("click",()=>P(q,z)),L.appendChild(q)})}catch(W){console.error("Error loading character options:",W)}}function P(z,W){document.querySelectorAll(".character-option").forEach((L)=>L.classList.remove("selected")),z.classList.add("selected"),W.state.selectedCharacter=z.dataset.character,console.log("Selected character:",W.state.selectedCharacter)}function Y(z){z.state.playerName=z.selectors.usernameInput.value;let W=z.state.playerName,$=z.state.selectedCharacter;if(!W||!$){alert("Please select a character first!");return}z.ws.send(JSON.stringify({action:"findLobby",name:W,character:$}))}function Z(z){z.viewManager.toggleMatchmakingUI(!1),z.ws.send(JSON.stringify({action:"cancelMatchmaking",lobbyId:z.state.lobbyId}))}function _(z,W){if(z.target.tagName!=="BUTTON")return;W.ws.send(JSON.stringify({action:"disconnect",lobbyId:W.state.lobbyId,playerName:W.state.playerName}))}function F(z,W){if(z.target.tagName!=="BUTTON")return;let $=z.target.dataset.move;N($,W),W.viewManager.toggleMoveButtons(!1)}function N(z,W){let $=W.state;console.log("SEND STATE",$),W.ws.send(JSON.stringify({action:"makeMove",lobbyId:$.lobbyId,move:z,playerName:$.playerName,currentResource:$.currentResource,breakroundleftheal:$.breakroundleftheal,breakroundleftdefence:$.breakroundleftdefence,hp:$.hp,powerBar:$.powerBar}))}async function G(z){try{let W=await fetch("/config/stats.json");if(!W.ok)throw new Error(`Failed to load stats config: ${W.statusText}`);let $=await W.json();z.state.statsConfig=$,console.log("Stats configuration loaded:",$)}catch(W){console.error("Error loading stats config:",W)}}function R(z,W){let $=JSON.parse(z.data);(f[$.action]||x)($,W)}var f={waitingForLobby:(z,W)=>{W.viewManager.toggleMatchmakingUI(!0)},gameStart:(z,W)=>{let $=W.state;$.lobbyId=z.lobbyId,$.currentTurn=z.currentTurn,W.selectors.playerCharacter.src=`/images/characters/${z.player.character}`,W.selectors.opponentCharacter.src=`/images/characters/${z.opponent.character}`,console.log("Game start:",z.player.powerBar,z.opponent.powerBar),K(z.player,W,"player"),K(z.opponent,W,"opponent"),W.viewManager.showGameScreen(),W.viewManager.toggleMoveButtons(!0)},updateGame:(z,W)=>{h(z,W),console.log("updateGame:",z.player.powerBar,z.opponent.powerBar),K(z.player,W,"player"),K(z.opponent,W,"opponent"),W.viewManager.toggleMoveButtons(!0)},gameOver:(z,W)=>{M(z,W)},disableButtons:(z,W)=>{W.viewManager.toggleMoveButtons(!1)},enableButtons:(z,W)=>{W.viewManager.toggleMoveButtons(!0)},matchmakingCancelled:(z,W)=>{W.viewManager.toggleMatchmakingUI(!1),alert("Matchmaking cancelled")},matchmakingError:(z,W)=>{W.viewManager.toggleMatchmakingUI(!1),alert(`Matchmaking failed: ${z.reason}`)}};function K(z,W,$){let L=W.viewManager,j=W.selectors[`${$}Name`];if(j)j.textContent=z.name;if(L.updateStat(z.hp,"hp",$),L.updateStat(z.currentResource,"resource",$),L.updateBar(z.currentResource),$==="player")W.state.powerBar=z.powerBar;else W.state.opponentPowerBar=z.powerBar}function h(z,W){let $=W.state;$.currentTurn=z.currentTurn,$.hp=z.player.hp,$.opponentHp=z.opponent.hp,$.currentResource=z.player.currentResource||$.currentResource,$.opponentResource=z.opponent.currentResource||$.opponentResource,$.breakroundleftheal=z.player.breakHeal||$.breakroundleftheal,$.breakroundleftdefence=z.player.breakDefense||$.breakroundleftdefence,$.powerBar=z.player.powerBar||$.powerBar,$.opponentPowerBar=z.opponent.powerBar||$.opponentPowerBar,$.currentResource=Math.min($.currentResource,$.maxResource),$.opponentResource=Math.min($.opponentResource,$.maxResource),$.hp=Math.min($.hp,$.maxHp),$.opponentHp=Math.min($.opponentHp,$.maxHp)}function M(z,W){console.log("Game over:",z);let $=z.winner||"Unknown";W.viewManager.toggleGameoverUI(!0,$)}function x(z){console.warn("Unknown message type:",z.action,z)}function H(){return{loginDiv:document.getElementById("login"),gameDiv:document.getElementById("game"),nameInput:document.getElementById("name"),findLobbyButton:document.getElementById("start-game"),playerHp:document.getElementById("playerHp"),opponentHp:document.getElementById("opponentHp"),playerResource:document.getElementById("playerResource"),opponentResource:document.getElementById("opponentResource"),waitingMessage:document.getElementById("waiting-message"),moveButtons:document.getElementById("move-buttons"),playerName:document.getElementById("playerName"),opponentName:document.getElementById("opponentName"),characterSelect:document.getElementById("characterSelect"),playerCharacter:document.getElementById("playerCharacter"),opponentCharacter:document.getElementById("opponentCharacter"),disconnectButton:document.getElementById("disconnectButton"),loginBtn:document.getElementById("loginBtn"),usernameInput:document.getElementById("username"),passwordInput:document.getElementById("password"),registerBtn:document.getElementById("registerBtn"),matchmakingOverlay:document.getElementById("matchmaking-overlay"),cancelMatchmakingButton:document.getElementById("cancel-matchmaking"),gameoverOverlay:document.getElementById("gameover-overlay"),closeGameoverOverlay:document.getElementById("close-gameover"),allButtons:document.querySelectorAll("button"),powerBar:document.getElementById("powerBar"),powerBarValue:document.getElementById("powerBarValue")}}function O(z){z.selectors.findLobbyButton?.addEventListener("click",()=>Y(z)),z.selectors.moveButtons?.addEventListener("click",(W)=>F(W,z)),z.selectors.disconnectButton?.addEventListener("click",(W)=>_(W,z)),z.selectors.loginBtn?.addEventListener("click",()=>A(z)),z.selectors.registerBtn?.addEventListener("click",()=>B(z)),z.selectors.cancelMatchmakingButton?.addEventListener("click",()=>Z(z)),z.selectors.closeGameoverOverlay?.addEventListener("click",()=>z.viewManager.showMainApp()),z.selectors.powerBar?.addEventListener("input",(W)=>{let $=W.target.value;z.state.powerBar=parseInt($),z.selectors.powerBarValue.textContent=$}),z.ws.onmessage=(W)=>R(W,z)}function A(z){let W={username:z.selectors.usernameInput?.value,password:z.selectors.passwordInput?.value};console.log("Login attempt:",W),z.viewManager.showMainApp()}function B(z){let W={username:z.selectors.usernameInput?.value,password:z.selectors.passwordInput?.value};console.log("Registration attempt:",W)}class Q{gameClient;views;navButtons;constructor(z){this.gameClient=z,this.views={login:document.getElementById("login"),mainApp:document.getElementById("main-app"),game:document.getElementById("game")},this.navButtons=document.querySelectorAll(".nav-btn"),this.initializeNavigation()}updateBar(z){let W=this.gameClient.selectors.powerBar;if(W.max=z.toString(),Number(W.value)>z)W.value=z.toString();let $=document.getElementById("powerBarValue");if($)$.textContent=W.value}updateStat(z,W,$){let L=this.gameClient.state.statsConfig[W];if(!L){console.warn(`Stat configuration for "${W}" not found.`);return}let j=this.gameClient.selectors[`${$}${W.charAt(0).toUpperCase()+W.slice(1)}`];if(!j){console.warn(`Selector for ${$}${W.charAt(0).toUpperCase()+W.slice(1)} not found.`);return}let q=j.querySelector(`.${W}-current`),J=j.querySelector(`.${W}-text`),S=z/L.max*100;q.style.width=`${S}%`,q.style.backgroundColor=L.color,J.textContent=`${Math.round(z)}/${L.max} ${L.suffix}`}initializeNavigation(){this.navButtons.forEach((z)=>{z.addEventListener("click",()=>{let W=z.dataset.view;this.activateSubview(W)})})}activateSubview(z){document.querySelectorAll("#content-container .view").forEach(($)=>{$.classList.add("hidden")}),this.navButtons.forEach(($)=>{$.classList.toggle("active",$.dataset.view===z)});let W=document.getElementById(`${z}-view`);if(W)W.classList.remove("hidden");else console.error(`Subview with ID ${z}-view not found.`)}resetUI(){let z={overlays:[".overlay"],buttons:[".btn"]};z.overlays.forEach((W)=>{document.querySelectorAll(W).forEach(($)=>{$.classList.add("hidden")})}),z.buttons.forEach((W)=>{document.querySelectorAll(W).forEach(($)=>{$.disabled=!1})}),this.toggleMatchmakingUI(!1),this.toggleGameoverUI(!1)}showView(z){this.resetUI(),Object.values(this.views).forEach(($)=>{$?.classList.add("hidden")});let W=this.views[z];if(W)W.classList.remove("hidden")}loadViewContent(z){switch(z){case"lobby":this.updateLobbyView();break;case"leaderboard":this.loadLeaderboard();break}}updateLobbyView(){let z=document.getElementById("selected-character-img");if(this.gameClient.state.selectedCharacter)z.src=`/images/characters/${this.gameClient.state.selectedCharacter}`}async loadLeaderboard(){}toggleMatchmakingUI(z){let{matchmakingOverlay:W,cancelMatchmakingButton:$,allButtons:L}=this.gameClient.selectors;W.classList.toggle("hidden",!z),L.forEach((j)=>{if(j!==$)j.disabled=z})}toggleGameoverUI(z,W="Unknown"){let{gameoverOverlay:$,closeGameoverOverlay:L,allButtons:j}=this.gameClient.selectors;if($.classList.toggle("hidden",!z),z){let q=$.querySelector("#gameover-status p");q.textContent=`Match ended! Winner: ${W}`}j.forEach((q)=>{if(q!==L)q.disabled=z})}toggleMoveButtons(z){this.gameClient.selectors.moveButtons.querySelectorAll("button").forEach(($)=>$.disabled=!z)}showGameScreen(){this.showView("game")}showMainApp(){this.showView("mainApp")}showLogin(){this.showView("login")}}class k{ws;selectors;state;viewManager;constructor(){let z=window.location.protocol==="https:"?"wss:":"ws:",W=window.location.host,$=`${z}//${W}/ws`;this.ws=new WebSocket($),this.selectors=H(),this.state=U(),this.viewManager=new Q(this),O(this),X(this),G(this),this.viewManager.showLogin()}}document.addEventListener("DOMContentLoaded",()=>{new k});export{k as GameClient};
